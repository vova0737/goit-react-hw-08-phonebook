{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/Filter/Filter.module.css","Components/ContactList/ContactList.module.css","Components/Title/Title.module.css","redux/phonebook/phonebook-operations.js","redux/phonebook/phonebook-selectors.js","Components/ContactForm/ContactForm.js","Components/Filter/Filter.js","Components/ContactList/ContactList.js","views/PhonebookView.js"],"names":["module","exports","operations","fetchContacts","dispatch","a","fetchContactRequest","axios","get","data","fetchContactSuccess","fetchContactError","message","addContact","name","number","contact","addContactRequest","post","then","addContactSuccess","catch","error","addContactError","deleteContact","contactId","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","getFilter","state","phoneBook","filter","getAllContacts","contacts","selectors","getLoading","loading","getError","getFilteredContactsList","createSelector","normalizedFilter","toLowerCase","includes","ContactForm","setMessage","note","setState","setTimeout","handleSubmit","e","preventDefault","props","find","item","onSubmit","handleChange","target","value","this","alert","className","styles","container","form","input","type","placeholder","onChange","btn","Component","connect","dispatsh","onChangeFilter","phonebookActions","title","onDelete","id","clearFilter","changeFilter","list","map","onClick","aria-label","PhonebookView","Container","isLoadingContacts"],"mappings":"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","file":"static/js/3.336dd716.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__H1Mc-\",\"input\":\"ContactForm_input__1vg8z\",\"btn\":\"ContactForm_btn__WnemU\",\"container\":\"ContactForm_container__16gCI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Filter_form__2Mdlo\",\"title\":\"Filter_title__XY3RO\",\"input\":\"Filter_input__2QnmY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3gCnD\",\"contact\":\"ContactList_contact__3Ls88\",\"name\":\"ContactList_name__2fasM\",\"number\":\"ContactList_number__2HDuq\",\"btn\":\"ContactList_btn__FVo5j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Title\":\"Title_Title__2cyVW\"};","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n} from './phonebook-actions';\n\n// axios.defaults.baseURL = 'http://localhost:4000';\n\nconst fetchContacts = () => async (dispatch) => {\n  dispatch(fetchContactRequest());\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactError(error.message));\n  }\n};\n\nconst addContact = (name, number) => async (dispatch) => {\n  const contact = {\n    name,\n    number,\n  };\n  dispatch(addContactRequest());\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error.message)));\n  \n};\n\nconst deleteContact = (contactId) => (dispatch) => {\n  dispatch(deleteContactRequest());\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => dispatch(deleteContactError(error.message)));\n};\n\nconst operations = {\n  fetchContacts,\n  addContact,\n  deleteContact,\n};\n\nexport default operations;\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getLoading = (state) => state.phoneBook.loading;\n\nconst getFilter = (state) => state.phoneBook.filter;\n\nconst getAllContacts = (state) => state.phoneBook.contacts;\n\nconst getError = (state) => state.phoneBook.error;\n\nconst getFilteredContactsList = createSelector(\n  [getAllContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n\n//ty\nconst selectors = {\n  getFilter,\n  getAllContacts,\n  getLoading,\n  getError,\n  getFilteredContactsList,\n};\n\nexport default selectors;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\nimport operations from '../../redux/phonebook/phonebook-operations';\nimport selectors from '../../redux/phonebook/phonebook-selectors';\n\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n    message: null,\n  };\n\n  static propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.object),\n    onSubmit: PropTypes.func,\n  };\n\n  setMessage = note => {\n    this.setState({ message: note });\n    setTimeout(() => {\n      this.setState({ message: null });\n    }, 2500);\n  };\n\n  handleSubmit = e => {\n    const { name, number } = this.state;\n    e.preventDefault();\n\n    if (name === '') {\n      this.setMessage('Enter contact name, please!');\n      return;\n    }\n    if (number === '') {\n      this.setMessage('Enter contact phone, please!');\n      return;\n    }\n    if (\n      this.props.contacts.find(\n        item => item.name.toLowerCase() === name.toLowerCase(),\n      )\n    ) {\n      this.setMessage('Contact already exists!');\n      return;\n    }\n\n    this.props.onSubmit(name, number);\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  render() {\n    const { name, number, message } = this.state;\n\n    return (\n      message && alert(message),\n      (\n        <div className={styles.container}>\n          <form className={styles.form} onSubmit={this.handleSubmit}>\n            <label>\n              <input\n                className={styles.input}\n                type=\"text\"\n                value={name}\n                name=\"name\"\n                placeholder=\"Name\"\n                onChange={this.handleChange}\n              />\n            </label>\n            <label>\n              <input\n                className={styles.input}\n                type=\"tel\"\n                value={number}\n                name=\"number\"\n                placeholder=\"Phone\"\n                onChange={this.handleChange}\n              />\n            </label>\n            <button className={styles.btn} type=\"submit\">\n              Add contact\n            </button>\n          </form>\n        </div>\n      )\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: selectors.getAllContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) => dispatch(operations.addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\nimport * as phonebookActions from '../../redux/phonebook/phonebook-actions';\nimport selectors from '../../redux/phonebook/phonebook-selectors';\n\nconst Filter = ({ value, onChangeFilter, contacts }) => {\n  return (\n    <form className={styles.form}>\n      <label>\n        <span className={styles.title}>Search by name</span>\n        <input\n          className={styles.input}\n          type=\"text\"\n          value={value}\n          onChange={onChangeFilter}\n        />\n      </label>\n    </form>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChangeFilter: PropTypes.func,\n  contacts: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = state => ({\n  value: selectors.getFilter(state),\n  contacts: selectors.getAllContacts(state),\n});\n\nconst mapDispatchToProps = (dispatsh) => ({\n  onChangeFilter: (e) =>\n    dispatsh(phonebookActions.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport styles from './ContactList.module.css';\nimport { changeFilter } from '../../redux/phonebook/phonebook-actions';\nimport operations from '../../redux/phonebook/phonebook-operations';\nimport selectors from '../../redux/phonebook/phonebook-selectors';\n\nconst ContactList = ({ contacts, onDelete, clearFilter }) => {\n  return (\n    <ul className={styles.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={styles.contact}>\n          <span className={styles.name}>{name}</span>\n          <span className={styles.number}>{number}</span>\n          <button\n            className={styles.btn}\n            onClick={() => {\n              onDelete(id, clearFilter());\n            }}\n            aria-label=\"Удалить контакт\"\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  onDelete: PropTypes.func,\n  contacts: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: selectors.getFilteredContactsList(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: id => dispatch(operations.deleteContact(id)),\n  clearFilter: () => dispatch(changeFilter('')),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Container from '../Components/Container/Container';\r\nimport ContactForm from '../Components/ContactForm/ContactForm';\r\nimport Filter from '../Components/Filter/Filter';\r\nimport ContactList from '../Components/ContactList/ContactList';\r\nimport Title from '../Components/Title/Title';\r\nimport operations from '../redux/phonebook/phonebook-operations';\r\nimport selectors from '../redux/phonebook/phonebook-selectors';\r\n\r\nclass PhonebookView extends Component {\r\n  static propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.object),\r\n    fetchContacts: PropTypes.func,\r\n    isLoadingContacts: PropTypes.bool,\r\n    error: PropTypes.object,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        {/* <Title /> */}\r\n        <ContactForm />\r\n        <Filter />\r\n        <ContactList />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: selectors.getAllContacts(state),\r\n  isLoadingContacts: selectors.getLoading(state),\r\n  error: selectors.getError(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchContacts: () => dispatch(operations.fetchContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PhonebookView);\r\n"],"sourceRoot":""}