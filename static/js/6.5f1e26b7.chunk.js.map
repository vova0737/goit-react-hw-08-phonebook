{"version":3,"sources":["views/RegisterView.js"],"names":["RegisterView","state","name","email","password","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onRegister","this","className","onSubmit","autoComplete","htmlFor","type","onChange","Component","mapDispatchToProps","authOperations","register","connect","error","authSelectors","getError","isLoadingAuth","getLoading"],"mappings":"4MAMMA,E,4MAMJC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,SAAU,I,EAGZC,aAAe,YAAkC,IAAD,IAA9BC,OAAUJ,EAAoB,EAApBA,KAAMK,EAAc,EAAdA,MAChC,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAAAC,GACbA,EAAEC,iBAEF,EAAKC,MAAMC,WAAW,EAAKZ,OAE3B,EAAKO,SAAS,CAAEN,KAAM,GAAIC,MAAO,GAAIC,SAAU,M,4CAGjD,WAAU,IAAD,EAC2BU,KAAKb,MAA/BC,EADD,EACCA,KAAMC,EADP,EACOA,MAAOC,EADd,EACcA,SAErB,OACE,gCACE,oBAAIW,UAAU,QAAd,6BAEA,uBAAMC,SAAUF,KAAKL,aAAcM,UAAU,OAAOE,aAAa,MAAjE,UACE,uBAAOC,QAAQ,OAAOH,UAAU,QAAhC,kBAGA,uBACEA,UAAU,QACVI,KAAK,OACLjB,KAAK,OACLK,MAAOL,EACPkB,SAAUN,KAAKT,eAGjB,uBAAOa,QAAQ,QAAQH,UAAU,QAAjC,mBAGA,uBACEA,UAAU,QACVI,KAAK,QACLjB,KAAK,QACLK,MAAOJ,EACPiB,SAAUN,KAAKT,eAGjB,uBAAOa,QAAQ,WAAWH,UAAU,QAApC,sBAGA,uBACEA,UAAU,QACVI,KAAK,WACLjB,KAAK,WACLK,MAAOH,EACPgB,SAAUN,KAAKT,eAGjB,wBAAQU,UAAU,SAASI,KAAK,SAAhC,+B,GAjEiBE,aA+ErBC,EAAqB,CACzBT,WAAYU,IAAeC,UAGdC,uBATS,SAAAxB,GAAK,MAAK,CAChCyB,MAAOC,IAAcC,SAAS3B,GAC9B4B,cAAeF,IAAcG,WAAW7B,MAOFqB,EAAzBG,CAA6CzB","file":"static/js/6.5f1e26b7.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport authOperations from '../redux/auth/auth-operations';\r\nimport authSelectors from '../redux/auth/auth-selectors';\r\n\r\nclass RegisterView extends Component {\r\n  static propTypes = {\r\n    error: PropTypes.string,\r\n    isLoadingAuth: PropTypes.bool,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n  };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onRegister(this.state);\r\n\r\n    this.setState({ name: '', email: '', password: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, email, password } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h1 className=\"Title\">Enter your data</h1>\r\n\r\n        <form onSubmit={this.handleSubmit} className=\"Form\" autoComplete=\"off\">\r\n          <label htmlFor=\"name\" className=\"Label\">\r\n            Name\r\n          </label>\r\n          <input\r\n            className=\"Input\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n\r\n          <label htmlFor=\"email\" className=\"Label\">\r\n            Email\r\n          </label>\r\n          <input\r\n            className=\"Input\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={this.handleChange}\r\n          />\r\n\r\n          <label htmlFor=\"password\" className=\"Label\">\r\n            Password\r\n          </label>\r\n          <input\r\n            className=\"Input\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={this.handleChange}\r\n          />\r\n\r\n          <button className=\"Button\" type=\"submit\">\r\n            Sign up\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  error: authSelectors.getError(state),\r\n  isLoadingAuth: authSelectors.getLoading(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onRegister: authOperations.register,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterView);\r\n"],"sourceRoot":""}